How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was very easy to see the mistake because it was highlighted


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It could help you to see where you usually make mistakes so you can prevent them. 


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

One pro is that in Google Docs there are tons of versions and you don't know which contains what information, you can only orientate by the dates. 
Another is that if you want to revert to an older version in Google Docs you can't be always sure that it is complete - it is possible that it has been cut off somewhere. 

A con is that it's possible that you forget to save a version when you need to and then the files would be harder to read, also you can't revert to an older version if there is no file for that.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because Git deals with code while Google Docs - not. When writing code files are usually associated with other files and saving them all for each commit makes it easy to see the changes to the whole package. 


How can you use the commands git log and git diff to view the history of files?

To see the history of all changes you just type git log when you are in the directory of the repository and to compare to files you write git diff followed by the ids of the two commits that you want to compare.


How might using version control make you more confident to make changes that could break something?

Because I can always track back where the mistake happened and correct it without trowing out other later changes to the files that happened after that.


Now that you have your workspace set up, what do you want to try using Git for?

I want to try it with my next coding project. 
